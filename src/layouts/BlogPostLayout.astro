---
import type { ImageMetadata } from "astro";
import { Image } from "astro:assets";
import { slugify } from "../utils/utils";
import MainLayout from "./MainLayout.astro";

interface Props {
  data: {
    title: string;
    cover: ImageMetadata;
    coverAlt: string;
    description?: string;
  };
}

const { data } = Astro.props;
const slug = slugify(data.title);
---

<MainLayout title={data.title} description={data.description} blogId={slug}>
  <article class="blog-post">
    <header>
      <nav class="back-nav">
        <a href="/" class="back-link">‚Üê Take Me Home üè°</a>
      </nav>
      {
        data.cover && (
          <Image
            src={data.cover}
            alt={data.coverAlt || data.title}
            class="cover__image"
            format="webp"
            transition:name={`blog-image-${slug}`}
          />
        )
      }
      <h1 class="blog__detail-title">{data.title}</h1>
      <br />
      <hr class="divider" />
    </header>

    <section class="post-content">
      <div class="markdown-body">
        <slot />
      </div>
    </section>

    <button id="backToTopBtn" class="back-to-top" aria-label="Back to top"
      >‚Üë</button
    >
  </article>
</MainLayout>

<style is:inline>
  body {
    background-color: rgb(20, 19, 25);
    display: flex;
    justify-content: center;
    font-family: "Inter", sans-serif;
  }

  .blog__detail-title {
    font-size: 2.5rem;
    color: white;
  }

  .blog-post {
    max-width: 800px;
    display: flex;
    flex-direction: column;
    padding: 2rem;
  }

  .blog-post header {
    margin-bottom: 2rem;
  }

  .back-nav {
    margin-bottom: 1.5rem;
    text-align: left;
  }
  .back-link {
    display: inline-block;
    color: #ffffff;
    text-decoration: none;
    font-weight: 500;
  }
  .back-link:hover {
    text-decoration: underline;
  }
  header {
    text-align: center;
  }

  .headi {
    color: orange;
  }
  .post-content {
    display: flex;
    gap: 2rem;
  }
  .content {
    flex: 3;
  }

  .cover__image {
    width: 50%;
    height: auto;
  }

  .cover {
    width: 100%;
    object-fit: contain;
  }

  .back-to-top {
    position: fixed;
    bottom: 2rem;
    left: 2rem;
    background-color: #ffffff;
    color: rgb(24, 24, 24);
    border: none;
    padding: 0.75rem 1rem;
    border-radius: 50%;
    font-size: 1.25rem;
    cursor: pointer;
    display: none;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);
    z-index: 100;
    transition: opacity 0.3s ease-in-out;
  }

  .back-to-top.show {
    display: block;
  }

  /* NOTE: MARKDOWN STYLES */

  .markdown-body {
    display: flex;
    flex-direction: column;
    :center;
    font-family: "Inter", sans-serif;
    line-height: 200%;
    margin-bottom: 6rem;
    position: relative;
  }

  .markdown-body h1,
  .markdown-body h2,
  .markdown-body h3,
  .markdown-body h4 {
    color: white;
  }
  .markdown-body p {
    color: rgb(172, 172, 172);
  }

  .markdown-body hr {
    border: none;
    border-top: 1px solid transparent;
    border-image: repeating-linear-gradient(
      to right,
      rgba(255, 255, 255, 0.3),
      rgba(255, 255, 255, 0.3) 6px,
      transparent 6px,
      transparent 10px
    );
    border-image-slice: 1;
    width: 100%;
    margin: 2rem 0;
  }

  .markdown-body pre {
    padding: 1rem;
    border-radius: 0.5rem;
    white-space: pre-wrap;
    word-break: break-word;
  }

  .markdown-body ul li p {
    margin: 0 0 0.5em 0;
  }

  .markdown-body ul {
    padding-left: 1.625em;
  }

  .markdown-body ul li::marker {
    color: rgb(196, 196, 196);
    font-weight: 900;
  }

  .markdown-body p img {
    display: block;
    margin-left: auto;
    margin-right: auto;
    max-width: 100%;
  }

  .markdown-body ul li > p {
    color: rgb(196, 196, 196);
  }

  .markdown-body blockquote {
    background: rgba(255, 255, 255, 0.05);
    border-left: 4px solid #ffd54f;
    padding: 1rem;
    margin: 2rem 0;
    border-radius: 8px;
    font-style: normal;
    color: #f1f1f1;
  }
</style>

<script is:inline data-astro-rerun>
  document.addEventListener("astro:page-load", () => {
    // Set back link to root "/"
    const backLink = document.querySelector(".back-link");
    if (backLink) {
      console.log(`Setting blog back URL to /`);
      backLink.href = "/";
    } else {
      console.warn("Back link not found");
    }

    // Scroll and back-to-top logic
    if (
      window.location.pathname.startsWith("/blogs/") &&
      window.location.pathname !== "/blogs/overview"
    ) {
      setTimeout(() => {
        window.scrollTo({ top: 0, behavior: "smooth" });
      }, 100);
    }

    const backToTopBtn = document.getElementById("backToTopBtn");

    window.addEventListener("scroll", () => {
      if (window.scrollY > 300) {
        backToTopBtn.classList.add("show");
      } else {
        backToTopBtn.classList.remove("show");
      }
    });

    backToTopBtn.addEventListener("click", () => {
      window.scrollTo({ top: 0, behavior: "smooth" });
    });
  });

  window.addEventListener("load", () => {
    if (
      window.location.pathname.startsWith("/blogs/") &&
      window.location.pathname !== "/blogs/overview"
    ) {
      window.scrollTo({ top: 0, behavior: "smooth" });
    }
  });
</script>
