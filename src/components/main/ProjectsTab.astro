---
import { imageList } from "../../data/project";

interface Props {
  withoutImage?: boolean;
  projectId?: string;
}

const { withoutImage, projectId } = Astro.props;

const projects = imageList.filter((img) => img.category === "projects");
---

<div class="projects-grid">
  {
    // projects.map((project) => (
    //   <div>
    //     {withoutImage && projectId === project.id ? (
    //       <div>
    //         <img
    //           class="h-auto w-full rounded-lg opacity-0"
    //           src={project.src}
    //           alt=""
    //         />
    //       </div>
    //     ) : (
    //       <a href={`/home/projects/${project.id}`} class="project-card">
    //         <div class="project-card__image-container">
    //           <img
    //             class="project-card__image"
    //             src={project.src}
    //             alt={project.title}
    //           />
    //         </div>
    //         <div class="project-card__content">
    //           <h3 class="project-card__title">{project.title}</h3>
    //           <p class="project-card__description">
    //             {project.description?.slice(0, 100)}...
    //           </p>
    //         </div>
    //       </a>
    //     )}
    //   </div>
    // ))
    projects.map(async (project) => (
      <div>
        {withoutImage && projectId === project.id ? (
          <div style="border-radius: 0.5rem;">
            <img
              style="height: auto; width: 100%; border-radius: 0.5rem; opacity: 0;"
              src={project.src}
              alt=""
            />
          </div>
        ) : (
          <div
            style="background-color: white; border-radius: 0.5rem;"
            transition:name={`wrapper-${project.id}`}
          >
            <a href={`/home/projects/${project.id}`}>
              <img
                style="height: 100%; width: 100%; border-radius: 0.5rem;"
                src={project.src}
                alt={project.id}
                transition:name={`image-${project.id}`}
              />
            </a>
          </div>
        )}
      </div>
    ))
  }
</div>

<style>
  .projects-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 2rem;
  }

  /* .project-card {
    display: block;
    border-radius: 0.5rem;
    overflow: hidden;
    background: rgba(255, 255, 255, 0.05);
    transition:
      transform 0.3s ease,
      box-shadow 0.3s ease;
    text-decoration: none;
    color: inherit;
  } */

  .project-card__image-container {
    height: 200px;
    overflow: hidden;
  }

  .project-card__image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.5s ease;
  }

  .project-card:hover .project-card__image {
    transform: scale(1.05);
  }

  .project-card__content {
    padding: 1.5rem;
  }

  .project-card__title {
    font-size: 1.25rem;
    margin-bottom: 0.5rem;
  }

  .project-card__description {
    color: #a0a0a0;
    font-size: 0.9rem;
  }
</style>
