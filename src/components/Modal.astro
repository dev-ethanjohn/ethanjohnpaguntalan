---
interface Props {
  projectId?: string;
  withoutImage?: boolean;
}

const { projectId } = Astro.props;

import { projects } from "../data/project";

const project = projects.find((img) => img.id === projectId);

if (!project) {
  throw new Error(`Image with id "${projectId}" not found`);
}
---

<div class="modal__overlay" transition:name="overlay">
  <div class="modal__card-wrapper">
    <a href="/home/projects">
      <button class="modal__close" aria-label="Close Modal">Ã—</button>
    </a>

    <div class="modal__card" transition:name={`card-${projectId}`}>
      <div
        class="modal__thumbnail-container"
        transition:name={`wrapper-${projectId}`}
      >
        <img
          class="modal__image"
          src={project.src}
          alt={project.id}
          transition:name={`image-${projectId}`}
        />
      </div>

      <div class="modal__content">
        <div class="title-wrapper">
          <h3 class="modal__content-title">
            {project.title}
          </h3>
          <ul class="project__links">
            <li>
              <a
                href="https://example.com/live"
                target="_blank"
                class="project__links-live"
              >
                live
              </a>
            </li>

            <li>
              <a
                href="https://example.com/repo"
                target="_blank"
                class="project__links-github"
              >
                repo
              </a>
            </li>
          </ul>
        </div>

        <div class="description-wrapper">
          <p
            class="modal__content-description"
            transition:name={`description-${project.id}`}
          >
            {project.description}
          </p>
        </div>

        <div class="meta-wrapper" transition:name={`meta-${projectId}`}>
          <div class="modal__content-stack">
            {
              project.stack.map((stack) => (
                <small
                  class="tech-stack"
                  style={`background-color: ${stack.color}`}
                >
                  {stack.name}
                </small>
              ))
            }
          </div>
        </div>
      </div>
    </div>
  </div>

  <style>
    .modal__card {
      position: relative;
      display: flex;
      width: 1120px;
      height: 600px;
      max-width: 90vw;
      max-height: 80vh;
      background-color: white;
      border-radius: 1rem;
      overflow: hidden;
      box-shadow: 0 8px 24px rgba(0, 0, 0, 0.2);
    }

    .title-wrapper {
      display: flex;
      justify-content: space-between;
      padding: 1rem;
      border-bottom: 1px solid rgba(0, 0, 0, 0.138);
    }

    .meta-wrapper {
      padding: 1rem;
      border-top: 1px solid rgba(0, 0, 0, 0.138);
    }

    .description-wrapper {
      padding: 1rem;
      overflow-y: auto;
      flex-grow: 1;
    }

    .modal__overlay {
      position: fixed;
      top: 0;
      left: 0;
      width: 100vw;
      height: 100vh;
      background-color: rgba(17, 18, 20, 0.7);
      display: flex;
      align-items: center;
      justify-content: center;
      z-index: 1000;
      inset: 0;
    }

    .modal__thumbnail-container {
      flex-basis: 60%;
      height: 100%;
    }

    .modal__image {
      width: 100%;
      height: 100%;
      object-fit: cover;
    }

    .modal__content {
      flex-basis: 40%;
      display: flex;
      flex-direction: column;
      justify-content: flex-start;
      background-color: #fafafa;
      color: #222;
    }

    .modal__content-title {
      font-size: 1.5rem;
      font-weight: bold;
    }

    .modal__content-description {
      font-size: 1rem;
      line-height: 1.6;
      color: #555;
    }

    .modal__content-stack {
      display: flex;
      gap: 0.5rem;
      flex-wrap: wrap;
    }
  </style>
</div>
