---
interface Props {
  projectId?: string;
  withoutImage?: boolean;
}

const { projectId } = Astro.props;

import { imageList } from "../data/project";

const image = imageList.find((img) => img.id === projectId);

if (!image) {
  throw new Error(`Image with id "${projectId}" not found`);
}
---

<!-- <div class="modal" > -->
<div class="modal__overlay" transition:name="overlay">
  <!-- Modal wrapper -->
  <div
    style="background-color: white; border-radius: 0.5rem"
    transition:name={`wrapper-${projectId}`}
  >
    <a href="/" class="product-img">
      <img
        class="modal-image"
        src={image.src}
        alt={image.id}
        transition:name={`image-${projectId}`}
      />
    </a>
  </div>
</div>
<!-- </div> -->

<style>
  /* .modal {
    position: fixed;
    inset: 0;
    height: 100%;
    width: 100%;
    z-index: 1000;
  }
   */
  .modal__overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    background-color: rgba(26, 32, 44, 0.7);
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 1000;
    inset: 0;
  }

  .modal {
    width: 50%;
    height: 50%;
    background-color: white;
    border-radius: 1.5rem;
    display: flex;
    gap: 2rem;
    color: black;
  }

  /* .modal__wrapper {
    max-width: 32rem;
    background-color: white;
    border-radius: 0.5rem;
    box-shadow:
      0 4px 6px -1px rgb(0 0 0 / 0.1),
      0 2px 4px -2px rgb(0 0 0 / 0.1);
    position: relative;
  } */

  /* .modal__link {
    display: block;
  } */

  .modal-image {
    display: block;
    width: 100%;
    height: 100%;
    object-fit: cover;
    border-radius: 0.5rem;
  }
  /* .modal__content {
    padding: 1rem;
  } */
  /* .modal__title {
    font-size: 1.25rem;
    line-height: 1.75rem;
    font-weight: 700;
  }


  .modal__close {
    position: absolute;
    top: 0.5rem;
    right: 0.5rem;
    background: none;
    border: none;
    font-size: 1rem;
    cursor: pointer;
    color: #333;
  } */

  /* @keyframes fade-in {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }
  ::view-transition-new(overlay) {
    animation: fade-in 300ms ease-out;
  }
  ::view-transition-old(overlay) {
    display: none;
  } */
</style>

<!-- <script>
  import { navigate } from "astro:transitions/client";

  document.addEventListener("DOMContentLoaded", async () => {
    const closeButton = document.querySelector(".modal__close");
    const overlay = document.querySelector(".modal__overlay");
    if (closeButton) {
      closeButton.addEventListener("click", (e) => {
        e.preventDefault();
        navigate("/home/projects");
      });
    }
    if (overlay) {
      overlay.addEventListener("click", (e) => {
        if (e.target === overlay) {
          e.preventDefault();
          navigate("/home/projects");
        }
      });
    }
  });
</script> -->

<!-- <script>
  import { navigate } from "astro:transitions/client";

  document.addEventListener("DOMContentLoaded", () => {
    console.log("Modal script initialized");
    const closeButton = document.querySelector(".modal__close");
    const overlay = document.querySelector(".modal__overlay");

    if (!closeButton || !overlay) {
      console.error("Modal elements missing:", { closeButton, overlay });
      return;
    }

    closeButton.addEventListener("click", (e) => {
      e.preventDefault();
      console.log("Modal close button clicked");
      navigate("/home/projects").catch((err) =>
        console.error("Modal navigation error:", err)
      );
    });

    overlay.addEventListener("click", (e) => {
      if (e.target === overlay) {
        e.preventDefault();
        console.log("Modal overlay clicked");
        navigate("/home/projects").catch((err) =>
          console.error("Modal navigation error:", err)
        );
      }
    });
  });
</script> -->
